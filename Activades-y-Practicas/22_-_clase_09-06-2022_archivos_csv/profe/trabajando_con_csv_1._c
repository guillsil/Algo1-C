#include <stdio.h>
#include <stdlib.h>

#define MAX_NOMBRE 50
#define MAX_COLOR 50
#define MAX_ESPECIE 50

#define LECTURA_ANIMALITO "%[^;];%[^;];%[^;];%[^;];%i;%f\n"

typedef struct anmilalito {
    char nombre[MAX_NOMBRE];
    char humano[MAX_NOMBRE];
    char color[MAX_COLOR];
    char especie[MAX_ESPECIE];
    int edad;
    float peso;
} anmilalito_t;

void imprimir_animalito(anmilalito_t animalito){
    printf("===== ANIMALITO =====\n");
    printf("== NOMBRE: %s\n", animalito.nombre);
    printf("== HUMANO: %s\n", animalito.humano);
    printf("== COLOR: %s\n", animalito.color);
    printf("== ESPECIE: %s\n", animalito.especie);
    printf("== EDAD: %i\n", animalito.edad);
    printf("== PESO: %f\n", animalito.peso);
    printf("=====================\n\n");

}

int main(int argc, char* argv[]){

    FILE* f_animales = fopen(argv[1], "r");
    if (f_animales == NULL) {
        perror("No pudo ser abierto el archivo.");
        return 1;
    }
       
    anmilalito_t animalito;
    int leidos = fscanf(f_animales, LECTURA_ANIMALITO, animalito.nombre, animalito.humano, animalito.color, animalito.especie, &(animalito.edad), &(animalito.peso));
    while(leidos == 6){
        if (animalito.edad >= atoi(argv[2]))
            imprimir_animalito(animalito);

        leidos = fscanf(f_animales, LECTURA_ANIMALITO, animalito.nombre, animalito.humano, animalito.color, animalito.especie, &(animalito.edad), &(animalito.peso));
    }

    fclose(f_animales);

    return 0;
}
